﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.LightGbm;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace Overlayer.DifficultyPrediction
{
    public partial class DifficultyPredictor
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"타일 수", @"타일 수"),new InputOutputColumnPair(@"평균 BPM", @"평균 BPM"),new InputOutputColumnPair(@"BPM 분산", @"BPM 분산"),new InputOutputColumnPair(@"BPM 표준편차", @"BPM 표준편차")})      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"타일 수",@"평균 BPM",@"BPM 분산",@"BPM 표준편차"}))      
                                    .Append(mlContext.Regression.Trainers.LightGbm(new LightGbmRegressionTrainer.Options(){NumberOfLeaves=499,MinimumExampleCountPerLeaf=68,NumberOfIterations=76,MaximumBinCountPerFeature=39,LearningRate=0.0325040909351773F,LabelColumnName=@"난이도",FeatureColumnName=@"Features",Booster=new GradientBooster.Options(){SubsampleFraction=0.832445448290436F,FeatureFraction=0.177186035210698F,L1Regularization=3.16961087620031E-09F,L2Regularization=2.32522641177478E-09F}}));

            return pipeline;
        }
    }
}
